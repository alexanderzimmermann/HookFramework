#!/bin/sh
#
# The pre-commit hook is run first, before you even type in a commit message.
# It’s used to inspect the snapshot that’s about to be committed, to see if
# you’ve forgotten something, to make sure tests run, or to examine whatever
# you need to inspect in the code. Exiting non-zero from this hook aborts the
# commit, although you can bypass it with git commit --no-verify. You can do
# things like check for code style (run lint or something equivalent), check
# for trailing whitespace (the default hook does exactly that), or check for
# appropriate documentation on new methods.

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

repository=$(git rev-parse --show-toplevel)

/path/to/hookframework/Hook $repository $against client.pre-commit >&2 || exit 1

exit 0
