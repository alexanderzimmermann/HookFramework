#!/usr/bin/php
<?php
/**
 * Executable for the hook tests.
 * @category   Tests
 * @package    Main
 * @subpackage Core
 * @author     Alexander Zimmermann <alex@zimmermann.com>
 * @copyright  2008-2013 Alexander Zimmermann <alex@zimmermann.com>
 * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
 * @version    PHP 5.4
 * @link       http://www.azimmermann.com/
 * @since      File available since Release 1.0.0
 */

/**
    The check for the params can be skipped, cause the script is only used in the test environment.
    Example: svnlook info -r 90 /var/svn/Example/
 */

$aCommands = array(
    'changed', 'diff', 'info', 'cat'
);

$sCommand = $argv[1];
$sParam   = $argv[2];
$sNumber  = $argv[3];
$sRepos   = $argv[4];

$sCatFile = '';
if (true === isset($argv[5])) {

    $sCatFile = $argv[5];
}

if (in_array($sCommand, $aCommands) === false) {

    exit;
}

// Path to _files directory.
$sPath = str_replace('bin', '', __DIR__);

// Determine file.
$sCatFile = basename($sCatFile);

if ($sParam === '-t') {

    $sType      = 'txn';
    $sTypeDesc  = 'such transaction';
    $sErrorCode = 'E160007';
}

if ($sParam === '-r') {

    $sType      = 'rev';
    $sTypeDesc  = 'Revision';
    $sErrorCode = 'E160006';
}

// Prepare file for svn fake.
$sFile = $sPath . $sType . '/' . $sNumber . '/';

// On "cat" the file will be attached.
if ($sCommand === 'cat') {
    $sFile .= $sCatFile;
} else {
    $sFile .= $sCommand;
}

$sFile .= '.txt';

// Send an error that the commit doesn't exists, when the file isn't available.
if (false === file_exists($sFile)) {

    echo sprintf('svnlook: %s: No %s %s' . "\n", $sErrorCode, $sTypeDesc, $sNumber);
    exit(1);
}

echo file_get_contents($sFile);
