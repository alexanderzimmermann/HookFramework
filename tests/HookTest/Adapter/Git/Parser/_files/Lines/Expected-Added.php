<?php
use Hook\Commit\Diff\Diff;
use Hook\Commit\Diff\Lines as DiffLines;

$oDiff = new Diff();

$oDiff->setOldStart(0);
$oDiff->setOldLength(0);

$oDiff->setNewStart(1);
$oDiff->setNewLength(105);

/* ==== */

$aRaw = array(
         '+<?php',
         '+/**',
         '+ * Parse the information lines of a commit..',
         '+ * @category   Category',
         '+ * @package    Package',
         '+ * @subpackage Subpackage',
         '+ * @author     Alexander Zimmermann <alex@azimmermann.com>',
         '+ * @copyright  2008-2013 Alexander Zimmermann <alex@azimmermann.com>',
         '+ * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License',
         '+ * @version    SVN: $Id:$',
         '+ * @link       http://www.azimmermann.com/',
         '+ * @since      File available since Release 1.0.0',
         '+ */',
         '+',
         '+namespace HooK\Adapter\Svn\Parser;',
         '+',
         '+use Hook\Commit\Info as InfoObject;',
         '+',
         '+/**',
         '+ * Parse the information lines of a commit.',
         '+ * @category   Category',
         '+ * @package    Package',
         '+ * @subpackage Subpackage',
         '+ * @author     Alexander Zimmermann <alex@azimmermann.com>',
         '+ * @copyright  2008-2013 Alexander Zimmermann <alex@azimmermann.com>',
         '+ * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License',
         '+ * @version    Release: 3.0.0',
         '+ * @link       http://www.azimmermann.com/',
         '+ * @since      Class available since Release 3.0.0',
         '+ */',
         '+class Info',
         '+{',
         '+    /**',
         '+     * Parse info from the commit.',
         '+     * @param array  $aData Commit info lines.',
         '+     * @param string $sTxn  Transaction identifier.',
         '+     * @param string $sRev  Revision identifier.',
         '+     * @return InfoObject',
         '+     * @author Alexander Zimmermann <alex@azimmermann.com>',
         '+     */',
         '+    public function parse(array $aData, $sTxn, $sRev)',
         '+    {',
         '+        // Set defaults.',
         '+        $aInfo             = array();',
         '+        $aInfo[\'txn\']      = $sTxn;',
         '+        $aInfo[\'rev\']      = $sRev;',
         '+        $aInfo[\'user\']     = \'\';',
         '+        $aInfo[\'datetime\'] = \'\';',
         '+        $aInfo[\'message\']  = \'\';',
         '+',
         '+        // This elements in this order.',
         '+        $aProperties = array(',
         '+            \'user\', \'datetime\', \'messagelength\', \'message\'',
         '+        );',
         '+',
         '+        $iMax = count($aData);',
         '+',
         '+        // Discard empty elements. Count could also be 0.',
         '+        if ($iMax > 4) {',
         '+            $iMax = 4;',
         '+        } // if',
         '+',
         '+        for ($iFor = 0; $iFor < $iMax; $iFor++) {',
         '+            $sData = $aData[$iFor];',
         '+            if ($aProperties[$iFor] === \'message\') {',
         '+                $aData[$iFor] = $this->parseMessage($sData);',
         '+            } // if',
         '+',
         '+            $aInfo[$aProperties[$iFor]] = trim($aData[$iFor]);',
         '+        } // for',
         '+',
         '+        $oInfo = new InfoObject(',
         '+            $aInfo[\'txn\'],',
         '+            $aInfo[\'rev\'],',
         '+            $aInfo[\'user\'],',
         '+            $aInfo[\'datetime\'],',
         '+            $aInfo[\'message\']',
         '+        );',
         '+',
         '+        return $oInfo;',
         '+    }',
         '+',
         '+    /**',
         '+     * Parse message.',
         '+     * @param string $sMessage Commit Text.',
         '+     * @return string',
         '+     * @author Alexander Zimmermann <alex@azimmermann.com>',
         '+     */',
         '+    private function parseMessage($sMessage)',
         '+    {',
         '+        $aMatches = array();',
         '+',
         '+        // Replace special signs in Format \\\123.',
         '+        preg_match_all(\'/\?\\\\\\\\\\\\\\\\([0-9]+)/\', $sMessage, $aMatches);',
         '+',
         '+        $iMax = count($aMatches[0]);',
         '+        for ($iFor = 0; $iFor < $iMax; $iFor++) {',
         '+            $sChr     = $aMatches[0][$iFor];',
         '+            $iChr     = (int)$aMatches[1][$iFor];',
         '+            $sMessage = str_replace($sChr, chr($iChr), $sMessage);',
         '+        } // for',
         '+',
         '+        return $sMessage;',
         '+    }',
         '+}',
         ''
        );
$aNew = array(
         1   => '<?php',
         2   => '/**',
         3   => ' * Parse the information lines of a commit..',
         4   => ' * @category   Category',
         5   => ' * @package    Package',
         6   => ' * @subpackage Subpackage',
         7   => ' * @author     Alexander Zimmermann <alex@azimmermann.com>',
         8   => ' * @copyright  2008-2013 Alexander Zimmermann <alex@azimmermann.com>',
         9   => ' * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License',
         10  => ' * @version    SVN: $Id:$',
         11  => ' * @link       http://www.azimmermann.com/',
         12  => ' * @since      File available since Release 1.0.0',
         13  => ' */',
         14  => '',
         15  => 'namespace HooK\Adapter\Svn\Parser;',
         16  => '',
         17  => 'use Hook\Commit\Info as InfoObject;',
         18  => '',
         19  => '/**',
         20  => ' * Parse the information lines of a commit.',
         21  => ' * @category   Category',
         22  => ' * @package    Package',
         23  => ' * @subpackage Subpackage',
         24  => ' * @author     Alexander Zimmermann <alex@azimmermann.com>',
         25  => ' * @copyright  2008-2013 Alexander Zimmermann <alex@azimmermann.com>',
         26  => ' * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License',
         27  => ' * @version    Release: 3.0.0',
         28  => ' * @link       http://www.azimmermann.com/',
         29  => ' * @since      Class available since Release 3.0.0',
         30  => ' */',
         31  => 'class Info',
         32  => '{',
         33  => '    /**',
         34  => '     * Parse info from the commit.',
         35  => '     * @param array  $aData Commit info lines.',
         36  => '     * @param string $sTxn  Transaction identifier.',
         37  => '     * @param string $sRev  Revision identifier.',
         38  => '     * @return InfoObject',
         39  => '     * @author Alexander Zimmermann <alex@azimmermann.com>',
         40  => '     */',
         41  => '    public function parse(array $aData, $sTxn, $sRev)',
         42  => '    {',
         43  => '        // Set defaults.',
         44  => '        $aInfo             = array();',
         45  => '        $aInfo[\'txn\']      = $sTxn;',
         46  => '        $aInfo[\'rev\']      = $sRev;',
         47  => '        $aInfo[\'user\']     = \'\';',
         48  => '        $aInfo[\'datetime\'] = \'\';',
         49  => '        $aInfo[\'message\']  = \'\';',
         50  => '',
         51  => '        // This elements in this order.',
         52  => '        $aProperties = array(',
         53  => '            \'user\', \'datetime\', \'messagelength\', \'message\'',
         54  => '        );',
         55  => '',
         56  => '        $iMax = count($aData);',
         57  => '',
         58  => '        // Discard empty elements. Count could also be 0.',
         59  => '        if ($iMax > 4) {',
         60  => '            $iMax = 4;',
         61  => '        } // if',
         62  => '',
         63  => '        for ($iFor = 0; $iFor < $iMax; $iFor++) {',
         64  => '            $sData = $aData[$iFor];',
         65  => '            if ($aProperties[$iFor] === \'message\') {',
         66  => '                $aData[$iFor] = $this->parseMessage($sData);',
         67  => '            } // if',
         68  => '',
         69  => '            $aInfo[$aProperties[$iFor]] = trim($aData[$iFor]);',
         70  => '        } // for',
         71  => '',
         72  => '        $oInfo = new InfoObject(',
         73  => '            $aInfo[\'txn\'],',
         74  => '            $aInfo[\'rev\'],',
         75  => '            $aInfo[\'user\'],',
         76  => '            $aInfo[\'datetime\'],',
         77  => '            $aInfo[\'message\']',
         78  => '        );',
         79  => '',
         80  => '        return $oInfo;',
         81  => '    }',
         82  => '',
         83  => '    /**',
         84  => '     * Parse message.',
         85  => '     * @param string $sMessage Commit Text.',
         86  => '     * @return string',
         87  => '     * @author Alexander Zimmermann <alex@azimmermann.com>',
         88  => '     */',
         89  => '    private function parseMessage($sMessage)',
         90  => '    {',
         91  => '        $aMatches = array();',
         92  => '',
         93  => '        // Replace special signs in Format \\\123.',
         94  => '        preg_match_all(\'/\?\\\\\\\\\\\\\\\\([0-9]+)/\', $sMessage, $aMatches);',
         95  => '',
         96  => '        $iMax = count($aMatches[0]);',
         97  => '        for ($iFor = 0; $iFor < $iMax; $iFor++) {',
         98  => '            $sChr     = $aMatches[0][$iFor];',
         99  => '            $iChr     = (int)$aMatches[1][$iFor];',
         100 => '            $sMessage = str_replace($sChr, chr($iChr), $sMessage);',
         101 => '        } // for',
         102 => '',
         103 => '        return $sMessage;',
         104 => '    }',
         105 => '}',
        );

$aOld = array();

$oExpected = new DiffLines;
$oExpected->setRawLines($aRaw);
$oExpected->setNewLines($aNew);
$oExpected->setOldLines($aOld);
$oExpected->setInfo($oDiff);
