@@ -0,0 +1,140 @@
+<?php
+/**
+ * Klasse fuer die Objekte die commited wurden.
+ * @category   Main
+ * @package    Hook
+ * @subpackage Core
+ * @author     Alexander Zimmermann <alex@azimmermann.com>
+ * @copyright  2008-2009 Alexander Zimmermann <alex@azimmermann.com>
+ * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
+ * @version    SVN: $Id: $
+ */
+
+require_once 'CommitBase.php';
+
+/**
+ * Klasse fuer die Objekte die commited wurden.
+ *
+ * Der Inhalt der Datei steht nicht in der Klasse, aus Performancegruenden wird
+ * dieser nur geholt wenn die Daten benoetigt werden. Das wird durch die
+ * Listener bestimmt.
+ * @category   Main
+ * @package    Hook
+ * @subpackage Core
+ * @author     Alexander Zimmermann <alex@azimmermann.com>
+ * @copyright  2008-2009 Alexander Zimmermann <alex@azimmermann.com>
+ * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
+ * @version    Release: 1.0.0
+ */
+class CommitObject extends CommitBase
+{
+	/**
+	 * Objektaktion (A, U, D).
+	 * @var string
+	 */
+	private $sAction;
+
+	/**
+	 * Verzeichnis oder Datei.
+	 * @var boolean
+	 */
+	private $bIsDir;
+
+	/**
+	 * Objektpfad
+	 * @var string
+	 */
+	private $sObjectPath;
+
+	/**
+	 * Tempor√§rer Pfad zum Objekt.
+	 * @var string
+	 */
+	private $sTmpObjectPath;
+
+	/**
+	 * Diff fuer die Datei.
+	 * @var array
+	 */
+	private $aDiffLines;
+
+	/**
+	 * Konstrutkor.
+	 * @param string $sAction Aktion des Objekts (A, U, D).
+	 * @param string $sObject Pfad des Objects (Verzeichnis oder Pfad + Datei).
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function __construct($sTxn, $iRev, $sAction, $bIsDir, $sObject)
+	{
+		parent::__construct($sTxn, $iRev);
+		$this->sAction     = $sAction;
+		$this->bIsDir      = $bIsDir;
+		$this->sObjectPath = $sObject;
+
+		// Verzeichnispfad umwandeln.
+		if ($bIsDir === false)
+		{
+			$sObject = str_replace('/', '_', $sObject);
+			$sObject = '/tmp/' . $sTxn . '-' . $sObject;
+
+			$this->sTmpObjectPath = $sObject;
+		} // if
+	} // function
+
+	/**
+	 * Setzen des Diffs.
+	 * @param string $sDiff Differenz (Nur bei Dateien)
+	 * @return void
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function setDiff($aDiff)
+	{
+		$this->aDiffLines = $aDiff;
+	} // function
+
+	/**
+	 * Differenzzeilen zurueck geben.
+	 * @return array
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function getDiff()
+	{
+		return $this->aDiffLines;
+	} // function
+
+	/**
+	 * Aktion zurueck geben.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function getAction()
+	{
+		return $this->sAction;
+	} // function
+
+	/**
+	 * Ist das Objekt ein Verzeichnis.
+	 * @return boolean
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function getIsDir()
+	{
+		return $this->bIsDir;
+	} // function
+
+	/**
+	 * Pfad zu der Datei zurueck geben.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function getObjectPath()
+	{
+		return $this->sObjectPath;
+	} // function
+
+	/**
+	 * Temporaeren Pfad zur Datei zurueck geben.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function getTmpObjectPath()
+	{
+		return $this->sTmpObjectPath;
+	} // function
+} // class

