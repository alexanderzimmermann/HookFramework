Added: hookframework/trunk/.buildpath',
===================================================================',
--- hookframework/trunk/.buildpath	                        (rev 0)',
+++ hookframework/trunk/.buildpath	2009-01-03 12:11:06 UTC (rev 141)',
@@ -0,0 +1,5 @@',
+<?xml version="1.0" encoding="UTF-8"?>',
+<buildpath>',
+	<buildpathentry kind="src" path=""/>',
+	<buildpathentry kind="con" path="org.eclipse.php.core.LANGUAGE"/>',
+</buildpath>',

Added: hookframework/trunk/.project
===================================================================
--- hookframework/trunk/.project	                        (rev 0)
+++ hookframework/trunk/.project	2009-01-03 12:11:06 UTC (rev 141)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>Testprojekt</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.wst.validation.validationbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.dltk.core.scriptbuilder</name>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.php.core.PHPNature</nature>
+	</natures>
+</projectDescription>

Added: hookframework/trunk/Core/Usage.php
===================================================================
--- hookframework/trunk/Core/Usage.php	                        (rev 0)
+++ hookframework/trunk/Core/Usage.php	2009-01-03 12:11:06 UTC (rev 141)
@@ -0,0 +1,323 @@
+<?php
+/**
+ * Usage Klasse fuer die kleine Hilfe Ausgabe.
+ * @category   Main
+ * @package    Hook
+ * @subpackage Core
+ * @author     Alexander Zimmermann <alex@azimmermann.com>
+ * @copyright  2008-2009 Alexander Zimmermann <alex@azimmermann.com>
+ * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
+ * @version    SVN: $Id$
+ * @link       http://www.azimmermann.com/
+ * @since      File available since Release 1.0.0
+ */
+
+/**
+ * Usage Klasse fuer die kleine Hilfe Ausgabe.
+ * @category   Main
+ * @package    Hook
+ * @subpackage Core
+ * @author     Alexander Zimmermann <alex@azimmermann.com>
+ * @copyright  2008-2009 Alexander Zimmermann <alex@azimmermann.com>
+ * @license    http://www.opensource.org/licenses/bsd-license.php  BSD License
+ * @version    Release: 1.0.0
+ * @link       http://www.azimmermann.com/
+ * @since      Class available since Release 1.0.0
+ */
+class Usage
+{
+	/**
+	 * Usage Methode die aufgerufen werden soll.
+	 * @var string
+	 */
+	private $sUsageMethod;
+
+	/**
+	 * Konstrutkor.
+	 * @param string $sMainType Haupttyp Hook (start, pre, post).
+	 * @param string $sSubType  Subtyp (commit, lock, revprop-change).
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function __construct($sMainType, $sSubType)
+	{
+		// Durch den Argumenten Check wird davon ausgegangen das der Parameter
+		// schon korrekt sein wird.
+		$this->sUsageMethod  = 'get';
+		$this->sUsageMethod .= ucfirst($sMainType);
+		$this->sUsageMethod .= ucfirst(str_replace('-', '', $sSubType));
+	} // function
+
+	/**
+	 * Usage Text zurueck geben.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function getUsage()
+	{
+		$sMethod = $this->sUsageMethod;
+
+		// Kopf.
+		$sUsage  = 'Aufruf mit folgenden Parametern und Reihenfolge: ' . "\n";
+		$sUsage .= "\n";
+
+		$aMethods = get_class_methods(get_class($this));
+
+		if (in_array($sMethod, $aMethods) === true)
+		{
+			return $sUsage . $this->$sMethod();
+		} // if
+
+		return $sUsage . $this->getCommonUsage();
+	} // function
+
+	/**
+	 * Start Commit Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getStartCommit()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH  (the path to this repository)
+			[2] USER        (the authenticated user attempting to commit)
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$USER     Benutzername des Commits' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $USER start-commit' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Pre Commit Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPreCommit()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH  (the path to this repository)
+			[2] TXN         (the name of the txn about to be committed)
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$TXN      Transaction (74-1)' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $TXN pre-commit' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Pre Revpropchange Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPreRevpropchange()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH  (the path to this repository)
+			[2] REV         (the revision being tweaked)
+			[3] USER        (the username of the person tweaking the property)
+			[4] PROPNAME    (the property being set on the revision)
+			[5] ACTION      (the property is being 'A'dded, 'M'odified,
+			                 or 'D'eleted)
+
+			[STDIN] PROPVAL  ** the new property value is passed via STDIN.
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$REV      Revisionsnummer die erstellt wird (74)' . "\n";
+		$sUsage .= '$USER     Benutzername des Commits' . "\n";
+		$sUsage .= '$PROPNAME Propertyname ' . "\n";
+		$sUsage .= '$ACTION   Wird Property "A"dded, "M"odified oder ';
+		$sUsage .= '"D"eleted' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $REV $USER ';
+		$sUsage .= '$SPROPNAME $ACTION pre-revprop-change' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Pre Lock Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPreLock()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH   (the path to this repository)
+			[2] PATH         (the path in the repository about to be locked)
+			[3] USER         (the user creating the lock)
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$PATH     Pfad im Repository das gesperrt ist.' . "\n";
+		$sUsage .= '$USER     Benutzername des Commits' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $PATH $USER pre-lock' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Pre Unlock Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPreUnlock()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH   (the path to this repository)
+			[2] PATH         (the path in the repository about to be locked)
+			[3] USER         (the user creating the lock)
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$PATH     Pfad im Repository das gesperrt ist.' . "\n";
+		$sUsage .= '$USER     Benutzername des Commits' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $PATH $USER pre-unlock' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Post Commit Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPostCommit()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH   (the path to this repository)
+			[2] REV          (the number of the revision just committed)
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$REV      Revisionsnummer die erstellt wird (74)' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $REV post-commit' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Post Revpropchange Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPostRevpropchange()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH  (the path to this repository)
+			[2] REV         (the revision being tweaked)
+			[3] USER        (the username of the person tweaking the property)
+			[4] PROPNAME    (the property being set on the revision)
+			[5] ACTION      (the property is being 'A'dded, 'M'odified,
+			                 or 'D'eleted)
+
+			[STDIN] PROPVAL  ** the new property value is passed via STDIN.
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$REV      Revisionsnummer die erstellt wird (74-1)' . "\n";
+		$sUsage .= '$USER     Benutzername des Commits' . "\n";
+		$sUsage .= '$PROPNAME Propertyname ' . "\n";
+		$sUsage .= '$ACTION   Wird Property "A"dded, "M"odified oder ';
+		$sUsage .= '"D"eleted' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $REV $USER ';
+		$sUsage .= '$SPROPNAME $ACTION post-revprop-change' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Post Lock Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPostLock()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH   (the path to this repository)
+			[2] USER         (the user who created the lock)
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$USER     Benutzername des Commits' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $USER post-lock' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Post Unlock Hook Usage.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getPostUnlock()
+	{
+		/**
+			Parameter die Subversion im Hook bereit stellt:
+			[1] REPOS-PATH   (the path to this repository)
+			[2] USER         (the user who destroyed the lock)
+		*/
+
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$USER     Benutzername des Commits' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiel: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $USER post-unlock' . "\n";
+
+		return $sUsage;
+	} // function
+
+	/**
+	 * Standard Usage, wenn Haupt und Subtyp nicht korrekt waren.
+	 * @return string
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	private function getCommonUsage()
+	{
+		$sUsage .= '$REPOS    Repository Pfad (/var/svn/project)' . "\n";
+		$sUsage .= '$Params   Parameter je nach Hook Typ.' . "\n";
+		$sUsage .= 'Hook      start-commit, pre-commit, post-commit' . "\n";
+		$sUsage .= "\n";
+		$sUsage .= 'Beispiele: ';
+		$sUsage .= '/var/svn/hk/Hook $REPOS $TXN pre-commit' . "\n";
+		$sUsage .= '/var/svn/hk/Hook $REPOS $REV post-commit' . "\n";
+
+		return $sUsage;
+	} // function
+} // class


Property changes on: hookframework/trunk/Core/Usage.php
___________________________________________________________________
Name: svn:keywords
   + Id


Property changes on: hookframework/trunk/logs
___________________________________________________________________
Name: svn:ignore
   + mail.log
common.log
test.log


Deleted: hookframework/trunk/logs/common.log
===================================================================
--- hookframework/trunk/logs/common.log	2008-12-20 19:20:59 UTC (rev 140)
+++ hookframework/trunk/logs/common.log	2009-01-03 12:11:06 UTC (rev 141)
@@ -1,38 +0,0 @@
-================================================================================
-                    2008-12-16 20:41:25
-================================================================================
-Argumente
-array (
-  0 => '/var/local/svn/hooks/Hook',
-  1 => '/var/local/svn',
-  2 => 'testuser12',
-  3 => 'start-commit',
-)
----------------
-Init
----------------
-files
-array (
-)
----------------
-Keine Listener: Abbruch Verarbeitung
----------------
-================================================================================
-                    2008-12-16 20:42:16
-================================================================================
-Argumente
-array (
-  0 => '/home/alexander/Apps/eclipse/workspace/HookFramework/Hook',
-  1 => '/var/local/svn',
-  2 => 'alexander',
-  3 => 'start-commit',
-)
----------------
-Init
----------------
-files
-array (
-)
----------------
-Keine Listener: Abbruch Verarbeitung
----------------

Modified: hookframework/trunk/tmp/newfolder1/newfolder1_1/correct_file1.php
===================================================================
--- hookframework/trunk/tmp/newfolder1/newfolder1_1/correct_file1.php	2008-12-20 19:20:59 UTC (rev 140)
+++ hookframework/trunk/tmp/newfolder1/newfolder1_1/correct_file1.php	2009-01-03 12:11:06 UTC (rev 141)
@@ -5,7 +5,7 @@
  * @package    Test
  * @subpackage Newfolder
  * @author     Alexander Zimmermann <alex@azimmermann.com>
- * @version    SVN: $Id: $
+ * @version    SVN: $Id$
  */

 /**
@@ -34,4 +34,13 @@
 	public function init()
 	{
 	} // function
+
+	/**
+	 * Hinzufuegen.
+	 * @return void
+	 * @author Alexander Zimmermann <alex@azimmermann.com>
+	 */
+	public function addItem()
+	{
+	} // function
 } // class
